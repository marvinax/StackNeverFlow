{"filename":"./data.json","collections":[{"name":"docs","data":[{"tag":"docs","content":"","meta":{"revision":0,"created":1434440668474,"version":0},"$loki":1},{"tag":"docs","content":"We may simply describe the current problem we met:\n\n1. When we get the initial state, the notes is empty.\n\n2. The loader loads the data from the backend via Ajax, the new data is obtained, and the Ajax calls the setState to change the inner state, and consequently calls the rendering routine.\n\n3. What we want to see is all the notes are filled with saved content, however only the first one is still empty, which is same as the initial value.\n\nAnd here's our reasoning.\n\nThe renderer always render with the inner state, so there must be an inner state that the note holder has all other notes same as what loaded, but the only first is the initial value. Thus we guess that React renders the DOM with an intermediate state that neither the initial one nor the finally loaded one.\n\nAnd then we find that the state appears in the componentDidUpdate function as the prevState. Thus there's a possibility that the state actually updated *AFTER* flushing the Virtual DOMs to the browser (render). And the renderer uses an undesired state.\n\nThe official document says that the componentDid","meta":{"revision":0,"created":1434440668475,"version":0},"$loki":2},{"tag":"docs","content":"Any thoughts?","meta":{"revision":0,"created":1434440668475,"version":0},"$loki":3}],"idIndex":[1,2,3],"binaryIndices":{},"constraints":null,"objType":"docs","dirty":true,"cachedIndex":null,"cachedBinaryIndex":null,"cachedData":null,"transactional":false,"cloneObjects":false,"asyncListeners":false,"disableChangesApi":true,"maxId":3,"DynamicViews":[],"events":{"insert":[null],"update":[null],"pre-insert":[],"pre-update":[],"close":[],"flushbuffer":[],"error":[],"delete":[null],"warning":[null]},"changes":[]}],"databaseVersion":1.1,"engineVersion":1.1,"autosave":false,"autosaveInterval":5000,"autosaveHandle":null,"options":{},"persistenceMethod":"fs","persistenceAdapter":null,"events":{"init":[null],"flushChanges":[],"close":[],"changes":[],"warning":[]},"ENV":"NODEJS"}